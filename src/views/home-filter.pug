extends layout

block content
    if error
        .error 
            div There was a problem retrieving data from the API. It is important that you have stable APIs for your production projects. Using a free, public API can backfire.
    // We are adding a Global Section using the data.Global object.
    if data
        .centered
            h4 TQS Data
            .centered
              script(type='text/javascript' src='https://canvasjs.com/assets/script/jquery-1.11.1.min.js')
              script(type='text/javascript' src='https://canvasjs.com/assets/script/canvasjs.min.js')
              h3 Canvas
              script(type="text/javascript").
                      window.onload = function () {
                        var dataPoints = [];
                        var chart = new CanvasJS.Chart("chartContainer",{
                        title:{
                        text:"Hello I am your Canvas girl here, kiss me Love You Sweet ^^"
                        },
                        data: [{
                        type: "line",
                        dataPoints : dataPoints,
                        }]
                        });
                        $.getJSON("http://localhost:8080/api/tutorials", function(data) {
                        $.each(data, function(key, value){
                        console.log(value.title)
                        console.log(value.description)
                        dataPoints.push({x: value.title, y: parseInt(value.description)});
                        dataPoints.push({x: value[0], y: parseInt(value[1])})
                        });
                            chart.render();
 
                        console.log(data);

                        });
                        }
                        #chartContainer(style='height: 300px; width: 100%;')





        .centered#countryList
            h2 By Country
            h3 Type to Filter
            form(onSubmit="handleSubmit(event)")
                input#needle(placeholder="Country name", onkeyup="handleKeyup(event)")
            // Client side JavaScript in the <script> element below is processed in your Web browser.
            script(type="text/javascript").
                filter = (needle) => {
                    const cards = document.querySelectorAll('#countryList .card');
                    cards.forEach(el => {
                        const name = el.getAttribute('data-name').toLowerCase();
                        const isMatched = name && name.indexOf(needle) !== -1;
                        el.style.display = isMatched ? 'block' : 'none';
                    });
                }
                handleSubmit = (e) => {
                    e.preventDefault(); // Prevent the form from reloading the page. We're handling this with JavaScript.
                };
                handleKeyup = (e) => {
                    // Filter whenever content is entered.
                    const needle = e.target.value.toLowerCase(); // Get the filter value.
                    filter(needle);
                };
            .cards
                // Our Countries array is now at data.Countries.
                each val, index in data.Countries
                    .card(data-name=val.Country.toLowerCase())
                        h2 #{val.Country}
                        i As of #{val.Date.split('T')[0]}
                        .row
                            .cases
                                h3 Confirmed
                                .row
                                    .new 
                                        h4 New
                                        .count #{val.NewConfirmed}
                                    .total 
                                        h4 Total
                                        .count  #{val.TotalConfirmed}
                            .deaths
                                h3 Deaths
                                .row
                                    .new 
                                        h4 New
                                        .count  #{val.NewDeaths}
                                    .total
                                        h4 Total
                                        .count  #{val.TotalDeaths}
                            .recovered
                                h3 Recovered
                                .row
                                    .new 
                                        h4 New
                                        .count  #{val.NewRecovered}
                                    .total
                                        h4 Total
                                        .count  #{val.TotalRecovered}
    p Visit the  
        a(href='/about') about page
